/**
 * generated by Xtext 2.36.0
 */
package org.xtext.browserautomation.mydsl.browserTest.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.xtext.browserautomation.mydsl.browserTest.Accessor;
import org.xtext.browserautomation.mydsl.browserTest.Attribute;
import org.xtext.browserautomation.mydsl.browserTest.BrowserTestPackage;
import org.xtext.browserautomation.mydsl.browserTest.Entree;
import org.xtext.browserautomation.mydsl.browserTest.Variable;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Entree</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.browserautomation.mydsl.browserTest.impl.EntreeImpl#getVar <em>Var</em>}</li>
 *   <li>{@link org.xtext.browserautomation.mydsl.browserTest.impl.EntreeImpl#getParam <em>Param</em>}</li>
 *   <li>{@link org.xtext.browserautomation.mydsl.browserTest.impl.EntreeImpl#getUntyped <em>Untyped</em>}</li>
 *   <li>{@link org.xtext.browserautomation.mydsl.browserTest.impl.EntreeImpl#getString <em>String</em>}</li>
 *   <li>{@link org.xtext.browserautomation.mydsl.browserTest.impl.EntreeImpl#getAccessor <em>Accessor</em>}</li>
 * </ul>
 *
 * @generated
 */
public class EntreeImpl extends MinimalEObjectImpl.Container implements Entree
{
  /**
   * The cached value of the '{@link #getVar() <em>Var</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getVar()
   * @generated
   * @ordered
   */
  protected Variable var;

  /**
   * The default value of the '{@link #getParam() <em>Param</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getParam()
   * @generated
   * @ordered
   */
  protected static final Attribute PARAM_EDEFAULT = Attribute.LINK;

  /**
   * The cached value of the '{@link #getParam() <em>Param</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getParam()
   * @generated
   * @ordered
   */
  protected Attribute param = PARAM_EDEFAULT;

  /**
   * The default value of the '{@link #getUntyped() <em>Untyped</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getUntyped()
   * @generated
   * @ordered
   */
  protected static final String UNTYPED_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getUntyped() <em>Untyped</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getUntyped()
   * @generated
   * @ordered
   */
  protected String untyped = UNTYPED_EDEFAULT;

  /**
   * The default value of the '{@link #getString() <em>String</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getString()
   * @generated
   * @ordered
   */
  protected static final String STRING_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getString() <em>String</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getString()
   * @generated
   * @ordered
   */
  protected String string = STRING_EDEFAULT;

  /**
   * The default value of the '{@link #getAccessor() <em>Accessor</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAccessor()
   * @generated
   * @ordered
   */
  protected static final Accessor ACCESSOR_EDEFAULT = Accessor.ALL;

  /**
   * The cached value of the '{@link #getAccessor() <em>Accessor</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAccessor()
   * @generated
   * @ordered
   */
  protected Accessor accessor = ACCESSOR_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected EntreeImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return BrowserTestPackage.Literals.ENTREE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Variable getVar()
  {
    return var;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetVar(Variable newVar, NotificationChain msgs)
  {
    Variable oldVar = var;
    var = newVar;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, BrowserTestPackage.ENTREE__VAR, oldVar, newVar);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setVar(Variable newVar)
  {
    if (newVar != var)
    {
      NotificationChain msgs = null;
      if (var != null)
        msgs = ((InternalEObject)var).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - BrowserTestPackage.ENTREE__VAR, null, msgs);
      if (newVar != null)
        msgs = ((InternalEObject)newVar).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - BrowserTestPackage.ENTREE__VAR, null, msgs);
      msgs = basicSetVar(newVar, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, BrowserTestPackage.ENTREE__VAR, newVar, newVar));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Attribute getParam()
  {
    return param;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setParam(Attribute newParam)
  {
    Attribute oldParam = param;
    param = newParam == null ? PARAM_EDEFAULT : newParam;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, BrowserTestPackage.ENTREE__PARAM, oldParam, param));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getUntyped()
  {
    return untyped;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setUntyped(String newUntyped)
  {
    String oldUntyped = untyped;
    untyped = newUntyped;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, BrowserTestPackage.ENTREE__UNTYPED, oldUntyped, untyped));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getString()
  {
    return string;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setString(String newString)
  {
    String oldString = string;
    string = newString;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, BrowserTestPackage.ENTREE__STRING, oldString, string));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Accessor getAccessor()
  {
    return accessor;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setAccessor(Accessor newAccessor)
  {
    Accessor oldAccessor = accessor;
    accessor = newAccessor == null ? ACCESSOR_EDEFAULT : newAccessor;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, BrowserTestPackage.ENTREE__ACCESSOR, oldAccessor, accessor));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case BrowserTestPackage.ENTREE__VAR:
        return basicSetVar(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case BrowserTestPackage.ENTREE__VAR:
        return getVar();
      case BrowserTestPackage.ENTREE__PARAM:
        return getParam();
      case BrowserTestPackage.ENTREE__UNTYPED:
        return getUntyped();
      case BrowserTestPackage.ENTREE__STRING:
        return getString();
      case BrowserTestPackage.ENTREE__ACCESSOR:
        return getAccessor();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case BrowserTestPackage.ENTREE__VAR:
        setVar((Variable)newValue);
        return;
      case BrowserTestPackage.ENTREE__PARAM:
        setParam((Attribute)newValue);
        return;
      case BrowserTestPackage.ENTREE__UNTYPED:
        setUntyped((String)newValue);
        return;
      case BrowserTestPackage.ENTREE__STRING:
        setString((String)newValue);
        return;
      case BrowserTestPackage.ENTREE__ACCESSOR:
        setAccessor((Accessor)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case BrowserTestPackage.ENTREE__VAR:
        setVar((Variable)null);
        return;
      case BrowserTestPackage.ENTREE__PARAM:
        setParam(PARAM_EDEFAULT);
        return;
      case BrowserTestPackage.ENTREE__UNTYPED:
        setUntyped(UNTYPED_EDEFAULT);
        return;
      case BrowserTestPackage.ENTREE__STRING:
        setString(STRING_EDEFAULT);
        return;
      case BrowserTestPackage.ENTREE__ACCESSOR:
        setAccessor(ACCESSOR_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case BrowserTestPackage.ENTREE__VAR:
        return var != null;
      case BrowserTestPackage.ENTREE__PARAM:
        return param != PARAM_EDEFAULT;
      case BrowserTestPackage.ENTREE__UNTYPED:
        return UNTYPED_EDEFAULT == null ? untyped != null : !UNTYPED_EDEFAULT.equals(untyped);
      case BrowserTestPackage.ENTREE__STRING:
        return STRING_EDEFAULT == null ? string != null : !STRING_EDEFAULT.equals(string);
      case BrowserTestPackage.ENTREE__ACCESSOR:
        return accessor != ACCESSOR_EDEFAULT;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (param: ");
    result.append(param);
    result.append(", untyped: ");
    result.append(untyped);
    result.append(", string: ");
    result.append(string);
    result.append(", accessor: ");
    result.append(accessor);
    result.append(')');
    return result.toString();
  }

} //EntreeImpl
